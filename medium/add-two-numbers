You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.

 

Example 1:


Input: l1 = [2,4,3], l2 = [5,6,4]
Output: [7,0,8]
Explanation: 342 + 465 = 807.

Example 2:

Input: l1 = [0], l2 = [0]
Output: [0]

Example 3:

Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]
Output: [8,9,9,9,0,0,0,1]

 

Constraints:

    The number of nodes in each linked list is in the range [1, 100].
    0 <= Node.val <= 9
    It is guaranteed that the list represents a number that does not have leading zeros.

-----

# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        tens_place = 0
        a = 0
        b = 0

        current_val = l1.val + l2.val + tens_place
        res = ListNode(current_val%10)
        tens_place = current_val//10
        tmp = res
        l1 = l1.next
        l2 = l2.next

        while True:
        
            if l1 is None and l2 is None:
                if tens_place != 0:
                    while tmp.next is not None:
                        tmp = tmp.next
                    tmp.next = ListNode(tens_place) 
                return res
            elif l1 is None:
                b = l2.val
                a = 0
                l2 = l2.next
            elif l2 is None:
                a = l1.val
                b = 0
                l1 = l1.next
            else:
                a = l1.val
                b = l2.val
                l1 = l1.next
                l2 = l2.next

            current_val = a + b + tens_place
            while tmp.next is not None:
                tmp = tmp.next
            tmp.next = ListNode(current_val%10)

            tens_place = current_val//10
        
